{"version":3,"file":"component---src-templates-thought-template-js-b8bdd67706c6a1d2873c.js","mappings":"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","sources":["webpack://seifrajhi.github.io/./src/components/thoughts/share-block.tsx","webpack://seifrajhi.github.io/./src/components/thoughts/thought.js","webpack://seifrajhi.github.io/./src/components/thoughts/thought-navigation.js","webpack://seifrajhi.github.io/./src/templates/thoughtTemplate.js","webpack://seifrajhi.github.io/./src/components/blog/newsletter-form.tsx","webpack://seifrajhi.github.io/./src/components/thoughts/thought-author.tsx"],"sourcesContent":["import * as React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons/faLinkedin\"\nimport { faReddit } from \"@fortawesome/free-brands-svg-icons/faReddit\"\nimport { faXTwitter } from \"@fortawesome/free-brands-svg-icons/faXTwitter\"\nimport { faFacebook } from \"@fortawesome/free-brands-svg-icons/faFacebook\"\nimport { faGetPocket } from \"@fortawesome/free-brands-svg-icons/faGetPocket\"\nimport {\n  FacebookShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  RedditShareButton,\n  PocketShareButton,\n} from \"react-share\"\n\nimport { useWebsiteMetadata } from \"../../hooks/website-metadata\"\nimport { trackCustomEvent } from \"gatsby-plugin-google-analytics\"\n\nimport \"./share-block.css\"\n\ninterface Props {\n  title: string\n  path: string\n  keywords: string[]\n}\n\nconst ShareBlock = ({ title, path, keywords }: Props): JSX.Element => {\n  const { siteUrl } = useWebsiteMetadata()\n  const url: string = `${siteUrl}${path}`\n\n  return (\n    <div data-nosnippet=\"\" className=\"social-share-wrapper\">\n      <h3>Share Your Love</h3>\n      <FacebookShareButton\n        beforeOnClick={() => {\n          trackCustomEvent({\n            category: \"social\",\n            action: \"share\",\n            label: \"facebook\",\n          })\n\n          typeof window !== \"undefined\" &&\n            typeof window.gtag !== \"undefined\" &&\n            window.gtag(\"event\", \"share\", {\n              event_category: \"social\",\n              event_label: \"facebook\",\n            })\n        }}\n        url={url}\n        keywords={keywords}\n        className=\"social-share-item facebook\"\n        aria-label=\"Share Via Facebook\"\n        title=\"Share Via Facebook\"\n      >\n        <FontAwesomeIcon icon={faFacebook} />\n      </FacebookShareButton>\n      <TwitterShareButton\n        beforeOnClick={() => {\n          trackCustomEvent({\n            category: \"social\",\n            action: \"share\",\n            label: \"twitter\",\n          })\n\n          typeof window !== \"undefined\" &&\n            typeof window.gtag !== \"undefined\" &&\n            window.gtag(\"event\", \"share\", {\n              event_category: \"social\",\n              event_label: \"twitter\",\n            })\n        }}\n        url={url}\n        className=\"social-share-item twitter\"\n        title={title}\n        keywords={keywords}\n        aria-label=\"Share Via Twitter\"\n      >\n        <FontAwesomeIcon icon={faXTwitter} />\n      </TwitterShareButton>\n      <LinkedinShareButton\n        beforeOnClick={() => {\n          trackCustomEvent({\n            category: \"social\",\n            action: \"share\",\n            label: \"linkedin\",\n          })\n          typeof window !== \"undefined\" &&\n            typeof window.gtag !== \"undefined\" &&\n            window.gtag(\"event\", \"share\", {\n              event_category: \"social\",\n              event_label: \"linkedin\",\n            })\n        }}\n        url={url}\n        className=\"social-share-item linkedin\"\n        aria-label=\"Share Via LinkedIn\"\n        keywords={keywords}\n        title=\"Share Via LinkedIn\"\n      >\n        <FontAwesomeIcon icon={faLinkedin} />\n      </LinkedinShareButton>\n      <RedditShareButton\n        beforeOnClick={() => {\n          trackCustomEvent({\n            category: \"social\",\n            action: \"share\",\n            label: \"reddit\",\n          })\n          typeof window !== \"undefined\" &&\n            typeof window.gtag !== \"undefined\" &&\n            window.gtag(\"event\", \"share\", {\n              event_category: \"social\",\n              event_label: \"reddit\",\n            })\n        }}\n        url={url}\n        className=\"social-share-item reddit\"\n        title={title}\n        keywords={keywords}\n        aria-label=\"Share Via Reddit\"\n      >\n        <FontAwesomeIcon icon={faReddit} />\n      </RedditShareButton>\n      <PocketShareButton\n        beforeOnClick={() => {\n          trackCustomEvent({\n            category: \"social\",\n            action: \"share\",\n            label: \"pocket\",\n            value: url,\n          })\n\n          typeof window !== \"undefined\" &&\n            typeof window.gtag !== \"undefined\" &&\n            window.gtag(\"event\", \"share\", {\n              event_category: \"social\",\n              event_label: \"pocket\",\n              value: url,\n            })\n        }}\n        url={url}\n        className=\"social-share-item pocket\"\n        title={title}\n        keywords={keywords}\n        aria-label=\"Add to Pocket\"\n      >\n        <FontAwesomeIcon icon={faGetPocket} />\n      </PocketShareButton>\n    </div>\n  )\n}\n\nShareBlock.propTypes = {\n  title: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n}\n\nShareBlock.defaultProps = {\n  keywords: [],\n}\n\nexport default ShareBlock\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport MainNavigation from \"../main-navigation\"\nimport ThemeSwitcher from \"../theme/theme-switcher\"\nimport ReadingTracker, { ContentTypes } from \"../analytics/reading-tracker\"\nimport ViewPageHeader from \"../theme/view-page-header\"\n\nimport \"./thought.css\"\nimport \"../theme/content.css\"\n\nconst Thought = (props) => {\n  const {\n    title,\n    keywords,\n    timeToRead,\n    publishedHumanDate,\n    publishedFullDate,\n    contentHtml,\n    cover,\n    coverCredits,\n  } = props\n\n  return (\n    <article className=\"thought-wrapper\">\n      <header>\n        <ViewPageHeader spaceTitle=\"Thoughts\" spaceLink=\"/thoughts/\" />\n        <br></br>\n        <MainNavigation space={\"thoughts\"} />\n        <br></br>\n        <figure className=\"cover\">\n          <div className=\"cover-filter\">\n            <GatsbyImage\n              className=\"cover cover-image\"\n              image={cover}\n              alt={title}\n            />\n          </div>\n          <figcaption\n            data-nosnippet=\"\"\n            className=\"image-title\"\n            dangerouslySetInnerHTML={{ __html: coverCredits }}\n          />\n        </figure>\n        \n        <h1>{title}</h1>\n        <div data-nosnippet=\"\" className=\"thought-details\">\n          <time className=\"thought-createdat\" dateTime={publishedFullDate}>\n            {publishedHumanDate}\n          </time>\n          <span> • </span>\n          <span className=\"thought-time2read\">\n            {timeToRead}\n            {timeToRead > 1 ? \"mins\" : \"min\"} read\n          </span>\n          <div className=\"theme-switcher\">\n            <ThemeSwitcher />\n          </div>\n        </div>\n      </header>\n      <div className=\"thought-divider\" />\n      <ul data-nosnippet=\"\" className=\"thought-tags\">\n        {keywords.map((keyword) => (\n          <li key={`tag-${keyword}`}>{keyword}</li>\n        ))}\n      </ul>\n      <div className=\"thought-divider\" />\n      <ReadingTracker contentType={ContentTypes.THOUGHT}>\n        <div\n          className=\"content thought-content\"\n          dangerouslySetInnerHTML={{ __html: contentHtml }}\n        />\n      </ReadingTracker>\n    </article>\n  )\n}\n\nThought.propTypes = {\n  title: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  publishedHumanDate: PropTypes.string.isRequired,\n  publishedFullDate: PropTypes.string.isRequired,\n  contentHtml: PropTypes.string.isRequired,\n}\n\nexport default Thought\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nimport \"./thought-navigation.css\"\n\nconst ThoughtNavigation = (props) => {\n  const {\n    next: { frontmatter: { title: nextTitle, path: nextUrl } = {} } = {},\n    prev: { frontmatter: { title: prevTitle, path: prevUrl } = {} } = {},\n  } = props\n\n  return (\n    <div className=\"thought-navigation-wrapper\">\n      <nav className=\"thought-navigation\">\n        <div className=\"nav-links\">\n          {nextUrl && (\n            <Link rel=\"next\" className=\"next-thought\" to={nextUrl}>\n              {nextTitle} →\n            </Link>\n          )}\n          {prevUrl && (\n            <Link rel=\"prev\" className=\"prev-thought\" to={prevUrl}>\n              ← {prevTitle}\n            </Link>\n          )}\n          <Link className=\"all-thoughts\" to=\"/thoughts/\">\n            All Thoughts\n          </Link>\n        </div>\n      </nav>\n    </div>\n  )\n}\n\nThoughtNavigation.propTypes = {\n  next: PropTypes.object,\n  prev: PropTypes.object,\n}\n\nexport default ThoughtNavigation\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport ThoughtAuthor from \"../components/thoughts/thought-author\"\nimport Thought from \"../components/thoughts/thought\"\nimport ThoughtNavigation from \"../components/thoughts/thought-navigation\"\nimport Layout from \"../components/theme/layout\"\nimport Footer from \"../components/footer\"\nimport Seo from \"../components/seo/seo\"\nimport MainNavigation from \"../components/main-navigation\"\nimport ViewPageHeader from \"../components/theme/view-page-header\"\nimport NewsletterForm from \"../components/blog/newsletter-form\"\nimport ShareBlock from \"../components/thoughts/share-block\"\nimport BreadcrumbsSnippet from \"../components/seo/breadcrumbs-snippet\"\nimport ArticleRichSnippet from \"../components/seo/article-snippet\"\n\nimport \"./ThoughtView.css\"\n\nexport default function Template({\n  data,\n  pageContext: { prevThought, nextThought },\n}) {\n  const {\n    markdownRemark: {\n      frontmatter: {\n        id,\n        path,\n        title,\n        humanDate,\n        fullDate,\n        keywords,\n        cover: {\n          childImageSharp: { gatsbyImageData },\n        },\n        coverCredits,\n      },\n      html,\n      rawMarkdownBody,\n      timeToRead,\n      excerpt,\n      wordCount: { words },\n    },\n  } = data\n\n  return (\n    <Layout>\n      <Seo\n        title={`${title} - Thoughts`}\n        className=\"thought-view-page\"\n        pagePath={path}\n        imagePath={gatsbyImageData.images.fallback.src}\n        ogType=\"article\"\n        description={excerpt}\n        keywords={keywords}\n        meta={[]}\n      />\n      <div className=\"thought-header\">\n      </div>\n      <main>\n        <Thought\n          title={title}\n          timeToRead={timeToRead}\n          publishedHumanDate={humanDate}\n          publishedFullDate={fullDate}\n          keywords={keywords}\n          cover={gatsbyImageData}\n          coverCredits={coverCredits}\n          contentHtml={html}\n        />\n        <ShareBlock title={title} path={path} tags={keywords} className=\"spaced-component\" />\n        <NewsletterForm />\n      </main>\n      <aside className=\"thought-sidebar\">\n        <ThoughtAuthor />\n        <ThoughtNavigation prev={prevThought} next={nextThought} />\n      </aside>\n      <Footer />\n      <ArticleRichSnippet\n        title={title}\n        path={path}\n        datePublished={fullDate}\n        dateModified={fullDate} // gitLogLatestDate\n        content={rawMarkdownBody}\n        wordCount={words}\n        keywords={keywords}\n        cover={gatsbyImageData}\n        articleSection={\"Thoughts\"}\n        genre={[\n          \"self-improvement\",\n          \"management\",\n          \"thoughts\",\n          \"life experience\",\n          \"life exploration\",\n        ]}\n      />\n      <BreadcrumbsSnippet\n        crumbs={[{ \"/thoughts/\": \"Thoughts\" }, { [path]: title }]}\n      />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query ($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      timeToRead\n      excerpt\n      rawMarkdownBody\n      wordCount {\n        words\n      }\n      frontmatter {\n        id\n        path\n        humanDate: date(formatString: \"MMM D, YYYY\")\n        fullDate: date(formatString: \"YYYY-MM-DD\")\n        title\n        keywords\n        cover {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED)\n          }\n        }\n        coverCredits\n      }\n    }\n  }\n`\n","import * as React from \"react\"\n\nimport \"./newsletter-form.css\"\n\nconst NewsletterForm = (): JSX.Element => {\n  return (\n    <div data-nosnippet=\"\" className=\"newsletter-form\">\n      <iframe\n        src=\"https://rajhisaif.substack.com/embed\"\n        loading=\"lazy\"\n        width=\"100%\"\n        height=\"320\"\n        style={{ border: \"10px solid #fff\" }}\n        frameBorder=\"0\"\n        scrolling=\"no\"\n        title=\"Newsletter Form\"\n      />\n    </div>\n  )\n}\n\nexport default NewsletterForm\n","import * as React from \"react\"\nimport Logo from \"../theme/logo\"\n\nimport \"./thought-author.css\"\n\nconst ThoughtAuthor = (): JSX.Element => {\n  return (\n    <div className=\"thought-author-wrapper\">\n      <div className=\"logo\">\n        <div className=\"avatar\">\n          <Logo />\n        </div>\n      </div>\n      <br></br>\n      <div className=\"name\">• Saifeddine Rajhi •</div>\n      <p className=\"thought-section-descr\">\n        My thoughts, pieces of advice and personal & professional life experience <br />\n        that will help you to <strong>overcome</strong> your life struggles\n      </p>\n    </div>\n  )\n}\n\nexport default ThoughtAuthor\n"],"names":["ShareBlock","_ref","title","path","keywords","siteUrl","useWebsiteMetadata","url","React","className","FacebookShareButton","beforeOnClick","trackCustomEvent","category","action","label","window","gtag","event_category","event_label","FontAwesomeIcon","icon","faFacebook","TwitterShareButton","faXTwitter","LinkedinShareButton","faLinkedin","RedditShareButton","faReddit","PocketShareButton","value","faGetPocket","defaultProps","props","timeToRead","publishedHumanDate","publishedFullDate","contentHtml","cover","coverCredits","ViewPageHeader","spaceTitle","spaceLink","MainNavigation","space","GatsbyImage","image","alt","dangerouslySetInnerHTML","__html","dateTime","ThemeSwitcher","map","keyword","key","ReadingTracker","contentType","ContentTypes","THOUGHT","next","frontmatter","nextTitle","nextUrl","prev","prevTitle","prevUrl","Link","rel","to","Template","data","pageContext","prevThought","nextThought","markdownRemark","id","humanDate","fullDate","childImageSharp","gatsbyImageData","html","rawMarkdownBody","excerpt","wordCount","words","Layout","Seo","pagePath","imagePath","images","fallback","src","ogType","description","meta","Thought","tags","NewsletterForm","ThoughtAuthor","ThoughtNavigation","Footer","ArticleRichSnippet","datePublished","dateModified","content","articleSection","genre","BreadcrumbsSnippet","crumbs","loading","width","height","style","border","frameBorder","scrolling","Logo"],"sourceRoot":""}