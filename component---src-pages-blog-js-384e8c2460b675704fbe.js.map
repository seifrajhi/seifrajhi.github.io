{"version":3,"file":"component---src-pages-blog-js-384e8c2460b675704fbe.js","mappings":"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","sources":["webpack://seifrajhi.github.io/./src/components/analytics/reading-tracker.tsx","webpack://seifrajhi.github.io/./src/components/blog/blog-teaser.tsx","webpack://seifrajhi.github.io/./src/components/footer.tsx","webpack://seifrajhi.github.io/./src/components/seo/breadcrumbs-snippet.tsx","webpack://seifrajhi.github.io/./src/components/theme/logo.tsx","webpack://seifrajhi.github.io/./src/hooks/storage.tsx","webpack://seifrajhi.github.io/./src/hooks/read-repository.ts","webpack://seifrajhi.github.io/./src/components/theme/view-page-header.js","webpack://seifrajhi.github.io/./src/pages/blog.js"],"sourcesContent":["import * as React from \"react\"\nimport { ReactNode, useEffect, useState } from \"react\"\nimport useReadRepository, {\n  ReadState,\n  ReadStatuses,\n} from \"../../hooks/read-repository\"\n\nexport enum ContentTypes {\n  BLOG = \"blog\",\n  THOUGHT = \"thought\",\n  LAB = \"lab\",\n}\n\ninterface Props {\n  id: string\n  contentType: ContentTypes\n  children: ReactNode\n}\n\nconst ReadingTracker = (props: Props): JSX.Element => {\n  const [contentType] = useState<string>(props.contentType)\n  const [initializedAt] = useState<number>(new Date().getTime())\n  const [readingStarted, setReadingStarted] = useState<boolean>(false)\n  const [readingStartedAt, setReadingStartedAt] = useState<number>(0)\n  const [readingEnded, setReadingEnded] = useState<boolean>(false)\n  const [readingEndedAt, setReadingEndedAt] = useState<number>(0)\n\n  const [readRepository, saveReadRepository] = useReadRepository(\n    props.contentType\n  )\n\n  const trackReadingStart = (\n    intersectedSections: IntersectionObserverEntry[]\n  ) => {\n    const section: IntersectionObserverEntry = intersectedSections\n\n    if (!section.isIntersecting || section.intersectionRatio <= 0) {\n      return\n    }\n\n    if (readingStarted) {\n      // already tracked start of reading\n      return\n    }\n\n    const startedAt: number = new Date().getTime()\n    const secondsUntilStartedReading: number = Math.round(\n      (startedAt - initializedAt) / 1000\n    )\n\n    window.requestAnimationFrame(() => {\n      if (typeof window !== \"undefined\" && typeof window.gtag !== \"undefined\") {\n        window.gtag(\"event\", \"startReading\", {\n          event_category: \"content\",\n          event_label: contentType,\n          value: secondsUntilStartedReading,\n        })\n      }\n    })\n\n    setReadingStarted(true)\n    setReadingStartedAt(startedAt)\n\n    // mark content as in progress of reading\n    const readState: ReadState = readRepository[props.id] || {\n      status: ReadStatuses.READING,\n      changed_at: new Date(),\n    }\n\n    if (readState.status == ReadStatuses.FINISHED) {\n      // content was read fully once. Don't reset that status\n      return\n    }\n\n    readState.status = ReadStatuses.READING\n    readState.changed_at = new Date()\n\n    readRepository[props.id] = readState\n    saveReadRepository(readRepository)\n  }\n\n  const trackReading = (sections: IntersectionObserverEntry[]): void => {\n    if (!readingStarted) {\n      return\n    }\n\n    if (readingEnded) {\n      return\n    }\n\n    const currentReadingSections: string[] = []\n\n    sections.forEach((section) => {\n      if (!section.isIntersecting || section.intersectionRatio <= 0) {\n        return\n      }\n\n      currentReadingSections.push(section.target.getAttribute(\"id\") as string)\n    })\n\n    if (currentReadingSections.length === 0) {\n      return\n    }\n\n    window.requestAnimationFrame(() => {\n      const spentTimeReading = new Date().getTime()\n      const secondsReading = Math.round(\n        (spentTimeReading - readingStartedAt) / 1000\n      )\n\n      if (typeof window !== \"undefined\" && typeof window.gtag !== \"undefined\") {\n        window.gtag(\"event\", \"reading\", {\n          event_category: \"content\",\n          event_label: contentType,\n          value: secondsReading,\n        })\n      }\n    })\n\n    const readState: ReadState = readRepository[props.id] || {\n      status: ReadStatuses.READING,\n      changed_at: new Date(),\n    }\n\n    if (readState.status == ReadStatuses.FINISHED) {\n      // content was read fully once. Don't reset that status\n      return\n    }\n\n    readState.status = ReadStatuses.READING\n    readState.changed_at = new Date()\n\n    readRepository[props.id] = readState\n    saveReadRepository(readRepository)\n  }\n\n  const trackReadingEnd = (\n    intersectedSections: IntersectionObserverEntry[]\n  ): void => {\n    const endSection: IntersectionObserverEntry = intersectedSections\n\n    if (!endSection.isIntersecting || endSection.intersectionRatio <= 0) {\n      return\n    }\n\n    if (readingEnded) {\n      // already tracked end of reading\n      return\n    }\n\n    const endedAt: number = new Date().getTime()\n\n    setReadingEnded(true)\n    setReadingEndedAt(endedAt)\n\n    const secondsUntilEndedReading = Math.round(\n      (readingEndedAt - readingStartedAt) / 1000\n    )\n\n    window.requestAnimationFrame(() => {\n      if (typeof window !== \"undefined\" && typeof window.gtag !== \"undefined\") {\n        window.gtag(\"event\", \"endReading\", {\n          event_category: \"content\",\n          event_label: contentType,\n          value: secondsUntilEndedReading,\n        })\n      }\n    })\n\n    const readState: ReadState = readRepository[props.id]\n\n    if (readState && readState.status == ReadStatuses.FINISHED) {\n      // content was read fully once. Don't reset that status\n      return\n    }\n\n    readRepository[props.id] = {\n      status: ReadStatuses.FINISHED,\n      changed_at: new Date(),\n    }\n    saveReadRepository(readRepository)\n  }\n\n  useEffect(() => {\n    if (typeof window === \"undefined\") {\n      return\n    }\n\n    const articleStart: HTMLElement = document.getElementById(\"intro\")\n    const articleEnd: HTMLElement = document.getElementById(\"content-end\")\n\n    const mainSections: HTMLHeadingElement[] = Array.from(\n      document.querySelectorAll(`.content h2[id]`)\n    )\n\n    const subSections: HTMLHeadingElement[] = Array.from(\n      document.querySelectorAll(\".content h3[id]\")\n    )\n    const allSections: HTMLElement[] = mainSections.concat(subSections)\n\n    const readingStartObserver = new IntersectionObserver(trackReadingStart)\n    const readingEndObserver = new IntersectionObserver(trackReadingEnd)\n    const readingObserver = new IntersectionObserver(trackReading)\n\n    allSections.forEach((section) => {\n      readingObserver.observe(section)\n    })\n\n    readingStartObserver.observe(articleStart)\n    readingEndObserver.observe(articleEnd)\n  }, [])\n\n  return (\n    <>\n      <div id=\"intro\" />\n      {props.children}\n      <div id=\"content-end\" />\n    </>\n  )\n}\n\n\nexport default ReadingTracker\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport useReadRepository, {\n  getStatusLabel,\n  ReadStatuses,\n} from \"../../hooks/read-repository\"\n\nimport \"./blog-teaser.css\"\nimport { ContentTypes } from \"../analytics/reading-tracker\"\n\nconst isNewArticle = (publishDate: string): boolean => {\n  const then = new Date(publishDate)\n  const now = new Date()\n\n  const msBetweenDates = Math.abs(then.getTime() - now.getTime())\n  const daysBetweenDates = msBetweenDates / (24 * 60 * 60 * 1000)\n\n  return daysBetweenDates < 30\n}\n\nconst BlogTeaser = (props) => {\n  const {\n    id,\n    title,\n    url,\n    timeToRead,\n    publishedHumanDate,\n    publishedFullDate,\n    excerpt,\n    cover,\n    keywords,\n  } = props\n\n  const [articleReadRepository, _] = useReadRepository(ContentTypes.BLOG)\n  const readingState = articleReadRepository[id]\n\n  const isFinished: boolean =\n    readingState && readingState.status == ReadStatuses.FINISHED\n  const isNew: boolean = isNewArticle(publishedFullDate)\n\n  return (\n    <article className=\"blog-item\">\n      <Link className=\"article-header\" to={url}>\n        <div className=\"cover-filter\">\n          <GatsbyImage className=\"cover\" image={cover} alt={title} />\n        </div>\n        {isNew ? (\n          <div\n            className={`new-badge`}\n            title={`Published less than a month ago`}\n          >\n            new\n          </div>\n        ) : (\n          \"\"\n        )}\n      </Link>\n      <div className=\"article-details\">\n        <h2>\n          <Link to={url}>{title}</Link>\n        </h2>\n        <div className=\"blog-details\">\n          <time className=\"blog-created-at\" dateTime={publishedFullDate}>\n            {publishedHumanDate}\n          </time>\n          <span> • </span>\n          <span className={`blog-time2read`}>\n            {timeToRead}\n            {timeToRead > 1 ? `mins` : `min`} read\n          </span>\n          {!isFinished ? (\n            <>\n              <span> • </span>\n              <span className={`unread-badge`}>\n                {getStatusLabel(readingState?.status)}\n              </span>\n            </>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <p className=\"blog-digest\">{excerpt}</p>\n        <ul className=\"blog-tags\">\n          {keywords.map((keyword: string) => (\n            <li key={url + keyword}>{keyword}</li>\n          ))}\n        </ul>\n      </div>\n    </article>\n  )\n}\n\nBlogTeaser.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  publishedFullDate: PropTypes.string.isRequired,\n  publishedHumanDate: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n  cover: PropTypes.object.isRequired,\n  keywords: PropTypes.array.isRequired,\n}\n\nexport default BlogTeaser\n","import * as React from \"react\"\nimport SocialLinks from \"./homepage/SocialLinks\"\n\nimport \"./Footer.css\"\n\nconst Footer = (): JSX.Element => {\n  const currentDate: Date = new Date()\n\n  return (\n    <footer data-nosnippet=\"\">\n      <div className=\"footer-wrapper\">\n        <SocialLinks showPatreon={true} iconSize={\"2x\"} />\n        <div className=\"copyright\">\n          Saifeddine Rajhi © 1994 - {currentDate.getFullYear()} <br />\n          <a\n            rel=\"license\"\n            href=\"https://creativecommons.org/licenses/by/4.0/\"\n            title=\"Content is published under CC BY 4.0 license\"\n          >\n            CC BY 4.0\n          </a>\n        </div>\n        <div className={`pgp`}>\n          <a href={`https://keybase.io/saifrajhi`}>0C3B BABB 8BC1 EA2B</a>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import * as React from \"react\"\nimport Helmet from \"react-helmet\"\n\nimport { useWebsiteMetadata } from \"../../hooks/website-metadata\"\n\ninterface Breadcrumb {\n  \"@type\": string\n  position: number\n  name: string\n  item: string\n}\n\ntype Crumb = Record<string, string>\n\ninterface Props {\n  crumbs: Crumb[]\n}\n\nconst BreadcrumbsSnippet = ({ crumbs = [] }: Props): JSX.Element => {\n  const { siteUrl } = useWebsiteMetadata()\n\n  const crumbItems: Breadcrumb[] = [\n    {\n      \"@type\": \"ListItem\",\n      position: 1,\n      name: \"Home\",\n      item: `${siteUrl}/`,\n    },\n  ]\n\n  crumbs.forEach((crumbItem: Crumb, idx: number) => {\n    const [[path, title]] = Object.entries(crumbItem)\n\n    crumbItems.push({\n      \"@type\": \"ListItem\",\n      position: idx + 2, // adjustment for the first home item which is in 1 position\n      name: title,\n      item: `${siteUrl}${path}`,\n    })\n  })\n\n  const schemaJSONLD = {\n    \"@context\": \"http://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    itemListElement: crumbItems,\n  }\n\n  return (\n    <Helmet>\n      <script type=\"application/ld+json\">{JSON.stringify(schemaJSONLD)}</script>\n    </Helmet>\n  )\n}\n\nexport default BreadcrumbsSnippet\n","import * as React from \"react\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Logo = (): JSX.Element => {\n  // TODO: parametrize and unify this component with Avatar one\n  return (\n    <StaticImage\n      className=\"logo-img\"\n      src={`../../images/homepage/saifeddine-rajhi.jpeg`}\n      width={150}\n      quality={80}\n      formats={[\"auto\", \"webp\", \"avif\"]}\n      alt={`Saifeddine Rajhi`}\n    />\n  )\n}\n\nexport default Logo\n","import { useState } from \"react\"\n\nfunction useLocalStorage<T>(key: string, initialValue: T) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    if (typeof window === \"undefined\") {\n      return initialValue\n    }\n\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key)\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error)\n      return initialValue\n    }\n  })\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: T | ((val: T) => T)) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value\n      // Save state\n      setStoredValue(valueToStore)\n      // Save to local storage\n      if (typeof window !== \"undefined\") {\n        window.localStorage.setItem(key, JSON.stringify(valueToStore))\n      }\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n  return [storedValue, setValue] as const\n}\n\nexport default useLocalStorage\n","import useLocalStorage from \"./storage\"\nimport { ContentTypes } from \"../components/analytics/reading-tracker\"\n\nexport enum ReadStatuses {\n  READING = 1,\n  FINISHED = 2,\n}\n\nexport interface ReadState {\n  changed_at: Date\n  status: undefined | ReadStatuses\n}\n\ninterface ReadRepository {\n  [key: string]: ReadState\n}\n\nexport const getStatusLabel = (status: ReadStatuses | undefined) => {\n  if (status === undefined) {\n    return \"unread\"\n  }\n\n  if (status == ReadStatuses.READING) {\n    return \"reading\"\n  }\n\n  if (status == ReadStatuses.FINISHED) {\n    return \"finished\"\n  }\n\n  throw Error(`Unknown reading status: ${status}`)\n}\n\nconst useReadRepository = (type: ContentTypes) => {\n  return useLocalStorage<ReadRepository>(`read-${type}`, {})\n}\n\nexport default useReadRepository\n","import React from \"react\"\nimport Logo from \"../theme/logo\"\n\nimport \"./view-page-header.css\"\n\n// todo: refactor name of the component. This header is placed not only on the view pages but on the listings\n\nconst ViewPageHeader = ({ spaceTitle, spaceLink, isListing = false }) => {\n  return (\n    <div className=\"view-page-header\">\n      <div className=\"view-page-header-wrapper\">\n        <div className=\"logo-wrapper\">\n          <div className=\"logo\">\n            <Logo width={150} />\n          </div>\n          <div className=\"name\">\n            <a href={spaceLink} title=\"back to blog\">\n              Saifeddine <br /> Rajhi\n            </a>\n          </div>\n        </div>\n        {isListing && (\n          <h1 className=\"blog-title\">\n            <a href={spaceLink} title=\"back to the homepage\">\n              {spaceTitle}\n            </a>\n          </h1>\n        )}\n        {!isListing && (\n          <h2 className=\"blog-title\">\n            <a href={spaceLink} title=\"back to the homepage\">\n              {spaceTitle}\n            </a>\n          </h2>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default ViewPageHeader\n","import React, { Component } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/theme/layout\"\nimport Seo from \"../components/seo/seo\"\nimport ViewPageHeader from \"../components/theme/view-page-header\"\nimport MainNavigation from \"../components/main-navigation\"\nimport BlogTeaser from \"../components/blog/blog-teaser\"\nimport ThemeSwitcher from \"../components/theme/theme-switcher\"\nimport BreadcrumbsSnippet from \"../components/seo/breadcrumbs-snippet\"\nimport Footer from \"../components/footer\"\n\nimport \"./blog.css\"\n\nclass BlogListPage extends Component {\n  render() {\n    const {\n      data: {\n        allMarkdownRemark: { edges },\n      },\n    } = this.props\n\n    return (\n      <Layout>\n        <Seo\n          title=\"Blog\"\n          pagePath=\"/blog/\"\n          className=\"blog-list-page\"\n          description=\"Technical blog about Platform engineer, data science, math and software engineering\"\n          keywords={[\n            \"technical blog\",\n            \"Platform engineer blog\",\n            \"math\",\n            \"engineering\",\n            \"Cloud engineering\",\n            \"Saifeddine Rajhi blog\",\n            \"Saif Rajhi blog\",\n          ]}\n          meta={[]}\n        />\n        <div className=\"blog-listing-wrapper\">\n          <aside className=\"blog-sidebar\">\n            <div className=\"blog-header\">\n              <ViewPageHeader\n                spaceTitle=\"Blog\"\n                spaceLink=\"/blog/\"\n                isListing={true}\n              />\n              <MainNavigation space={\"blog\"} />\n            </div>\n            <div className=\"blog-intro\">\n              Technical notes about data Platform engineering, SRE, containers and\n              cloud ecosystems. Recording what I learn everyday.\n            </div>\n            <div className=\"misc\">\n              <div className=\"theme-switcher\">\n                <ThemeSwitcher />\n              </div>\n            </div>\n          </aside>\n          <main\n            data-nosnippet=\"\"\n            className={`blog-list blog-grid ${!edges.length ? \"no-posts\" : \"\"}`}\n          >\n            {!edges.length && (\n              <div className=\"no-posts-placeholder\">\n                Great posts will be here as soon as my muse comes back to me{\" \"}\n                <span role=\"img\" aria-label=\"magic will happen soon\">\n                  💫\n                </span>{\" \"}\n                <br />\n                Come back soon{\" \"}\n                <span aria-label=\"bye\" role=\"img\">\n                  👋\n                </span>\n              </div>\n            )}\n            {edges.map(\n              ({\n                node: {\n                  timeToRead,\n                  frontmatter: {\n                    id,\n                    title,\n                    path,\n                    humanDate,\n                    fullDate,\n                    excerpt,\n                    keywords,\n                    cover: {\n                      childImageSharp: { gatsbyImageData },\n                    },\n                  },\n                },\n              }) => (\n                <BlogTeaser\n                  id={id}\n                  key={id}\n                  title={title}\n                  url={path}\n                  timeToRead={timeToRead}\n                  publishedHumanDate={humanDate}\n                  publishedFullDate={fullDate}\n                  excerpt={excerpt}\n                  cover={gatsbyImageData}\n                  keywords={keywords}\n                />\n              )\n            )}\n          </main>\n          <div className=\"clearfix\" />\n        </div>\n        <Footer />\n        <BreadcrumbsSnippet crumbs={[{ \"/blog/\": \"Blog\" }]} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogListPage\n\nexport const pageQuery = graphql`\n  query BlogListQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: {\n        fileAbsolutePath: { regex: \"/(blog)/\" }\n        frontmatter: { published: { eq: true } }\n      }\n    ) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            id\n            humanDate: date(formatString: \"MMM D, YYYY\")\n            fullDate: date(formatString: \"YYYY-MM-DD\")\n            path\n            title\n            keywords\n            excerpt\n            cover {\n              childImageSharp {\n                gatsbyImageData(\n                  layout: CONSTRAINED\n                  width: 620\n                  placeholder: BLURRED\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["ContentTypes","props","contentType","useState","initializedAt","Date","getTime","readingStarted","setReadingStarted","readingStartedAt","setReadingStartedAt","readingEnded","setReadingEnded","readingEndedAt","setReadingEndedAt","readRepository","saveReadRepository","useReadRepository","trackReadingStart","intersectedSections","section","isIntersecting","intersectionRatio","startedAt","secondsUntilStartedReading","Math","round","window","requestAnimationFrame","gtag","event_category","event_label","value","readState","id","status","ReadStatuses","READING","changed_at","FINISHED","trackReading","sections","currentReadingSections","forEach","push","target","getAttribute","length","spentTimeReading","secondsReading","trackReadingEnd","endSection","endedAt","secondsUntilEndedReading","useEffect","articleStart","document","getElementById","articleEnd","mainSections","Array","from","querySelectorAll","subSections","allSections","concat","readingStartObserver","IntersectionObserver","readingEndObserver","readingObserver","observe","React","children","title","url","timeToRead","publishedHumanDate","publishedFullDate","excerpt","cover","keywords","articleReadRepository","_","BLOG","readingState","isFinished","isNew","publishDate","then","now","abs","isNewArticle","className","Link","to","GatsbyImage","image","alt","dateTime","getStatusLabel","map","keyword","key","Footer","currentDate","SocialLinks","showPatreon","iconSize","getFullYear","rel","href","_ref","crumbs","siteUrl","useWebsiteMetadata","crumbItems","position","name","item","crumbItem","idx","path","Object","entries","schemaJSONLD","itemListElement","Helmet","type","JSON","stringify","Logo","StaticImage","src","width","quality","formats","__imageData","require","initialValue","storedValue","setStoredValue","localStorage","getItem","parse","error","console","log","valueToStore","Function","setItem","undefined","Error","useLocalStorage","spaceTitle","spaceLink","isListing","BlogListPage","_Component","apply","arguments","_inheritsLoose","prototype","render","data","allMarkdownRemark","edges","this","Layout","Seo","pagePath","description","meta","ViewPageHeader","MainNavigation","space","ThemeSwitcher","role","node","frontmatter","humanDate","fullDate","childImageSharp","gatsbyImageData","BlogTeaser","BreadcrumbsSnippet","Component"],"sourceRoot":""}