{"version":3,"file":"component---src-pages-404-tsx-83bdb4e48c18bf191297.js","mappings":"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","sources":["webpack://seifrajhi.github.io/./src/components/seo/breadcrumbs-snippet.tsx","webpack://seifrajhi.github.io/./src/components/404/pokemon.tsx","webpack://seifrajhi.github.io/./src/pages/404.tsx"],"sourcesContent":["import * as React from \"react\"\nimport Helmet from \"react-helmet\"\n\nimport { useWebsiteMetadata } from \"../../hooks/website-metadata\"\n\ninterface Breadcrumb {\n  \"@type\": string\n  position: number\n  name: string\n  item: string\n}\n\ntype Crumb = Record<string, string>\n\ninterface Props {\n  crumbs: Crumb[]\n}\n\nconst BreadcrumbsSnippet = ({ crumbs = [] }: Props): JSX.Element => {\n  const { siteUrl } = useWebsiteMetadata()\n\n  const crumbItems: Breadcrumb[] = [\n    {\n      \"@type\": \"ListItem\",\n      position: 1,\n      name: \"Home\",\n      item: `${siteUrl}/`,\n    },\n  ]\n\n  crumbs.forEach((crumbItem: Crumb, idx: number) => {\n    const [[path, title]] = Object.entries(crumbItem)\n\n    crumbItems.push({\n      \"@type\": \"ListItem\",\n      position: idx + 2, // adjustment for the first home item which is in 1 position\n      name: title,\n      item: `${siteUrl}${path}`,\n    })\n  })\n\n  const schemaJSONLD = {\n    \"@context\": \"http://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    itemListElement: crumbItems,\n  }\n\n  return (\n    <Helmet>\n      <script type=\"application/ld+json\">{JSON.stringify(schemaJSONLD)}</script>\n    </Helmet>\n  )\n}\n\nexport default BreadcrumbsSnippet\n","import React, { useEffect, useState } from \"react\"\n\nimport \"./pokemon.css\"\n\ninterface Stat {\n  name: Stats\n  value: number\n}\n\ninterface Ability {\n  name: string\n  hidden: boolean\n  description: string\n}\n\ninterface Specie {\n  mythical: boolean\n  legendary: boolean\n  baby: boolean\n  capture_rate: number\n  description: string\n  generation: string\n  evolveFrom: undefined | string\n  varieties: undefined | number\n  habitat: undefined | string\n  eggGroups: string[]\n  growthRate: string\n  shape: string\n}\n\ninterface PokemonData {\n  name: string\n  specie: Specie\n  base_exp: number\n  imageUrl: string\n  types: string[]\n  height: number\n  weight: number\n  stats: Stat[]\n  abilities: Ability[]\n}\n\ninterface Props {\n  children: JSX.Element\n}\n\nexport const randomPokemonID = (): number => {\n  const minID: number = 1\n  const maxID: number = 600\n\n  return Math.floor(Math.random() * (maxID - minID + 1) + minID)\n}\n\nconst noDash = (value: string): string => {\n  return value.replace(\"-\", \" \")\n}\n\nconst cleanDescription = (value: string, name: string): string => {\n  return value.replace(\"POKÃ©MON\", \"pokemon\").replace(name.toUpperCase(), name)\n}\n\nasync function fetchJson<T>(url: string): Promise<T> {\n  return fetch(url).then((res) => res.json())\n}\n\nconst fetchAbilities = async (\n  rawAbilities: RawAbility[]\n): Promise<Ability[]> => {\n  return Promise.all(\n    rawAbilities.map(async (rawAbility: RawAbility) => {\n      const ability = await fetchJson<PokemonAbilityOut>(rawAbility.ability.url)\n      const effectInEng: EffectEntry | undefined = ability.effect_entries.find(\n        (entry: EffectEntry) => entry.language.name == \"en\"\n      )\n\n      return {\n        name: rawAbility.ability.name,\n        hidden: rawAbility.is_hidden,\n        description: effectInEng?.short_effect,\n      } as Ability\n    })\n  )\n}\n\nconst fetchSpecieInfo = async (ID: number): Promise<Specie> => {\n  return await fetchJson<SpecieOut>(\n    `https://pokeapi.co/api/v2/pokemon-species/${ID}/`\n  ).then((specieData: SpecieOut) => {\n    console.log(specieData)\n\n    const engEntries: FlavorTextEntry[] = specieData.flavor_text_entries.filter(\n      (entry) => entry.language.name === \"en\"\n    )\n    let description: string = \"\"\n\n    if (engEntries) {\n      description = engEntries.sort(() => 0.5 - Math.random())[0].flavor_text\n    }\n\n    const generation: string = specieData.generation.name\n      .replace(\"generation-\", \"\")\n      .toUpperCase()\n    const evolveFrom: string | undefined = specieData.evolves_from_species?.name\n    const varieties: number | undefined =\n      specieData.varieties.length > 1 ? specieData.varieties.length : undefined\n    const eggGroups: string[] = specieData.egg_groups.map((group) =>\n      group.name.replace(\"indeterminate\", \"N/A\")\n    )\n    const habitat: string | undefined = specieData.habitat?.name\n    const growthRate: string = specieData.growth_rate.name\n\n    return {\n      mythical: specieData.is_mythical,\n      baby: specieData.is_baby,\n      legendary: specieData.is_legendary,\n      generation,\n      description,\n      evolveFrom,\n      varieties,\n      eggGroups,\n      habitat,\n      growthRate,\n    } as Specie\n  })\n}\n\nconst fetchPokemon = async (ID: number): Promise<PokemonData> => {\n  return fetchJson<PokemonDataOut>(\n    `https://pokeapi.co/api/v2/pokemon/${ID}/`\n  ).then(async (pokeData) => {\n    return {\n      name: pokeData.name,\n      imageUrl: pokeData?.sprites?.other?.dream_world?.front_default,\n      types: pokeData?.types.map((type: RawTypeItem) => type.type?.name),\n      weight: pokeData?.weight,\n      height: pokeData?.height,\n      stats: pokeData?.stats.map((statItem: RawStatItem) => ({\n        name: statItem.stat.name,\n        value: statItem.base_stat,\n      })),\n      specie: await fetchSpecieInfo(ID),\n      base_exp: pokeData.base_experience,\n      abilities: await fetchAbilities(pokeData.abilities),\n    } as PokemonData\n  })\n}\n\nconst Pokemon = ({ children }: Props): JSX.Element => {\n  const [pokemonID, _] = useState(randomPokemonID())\n  const [pokemonData, setPokemonData] = useState<PokemonData | undefined>(\n    undefined\n  )\n\n  useEffect(() => {\n    const fetchRandomPokemon = async (pokemonID: number) => {\n      const pokemonData: PokemonData = await fetchPokemon(pokemonID)\n      setPokemonData(pokemonData)\n    }\n\n    fetchRandomPokemon(pokemonID)\n  }, [pokemonID, setPokemonData])\n\n  if (!pokemonData) {\n    return <div className={`pokemon loading`}>Looking for pokemons..</div>\n  }\n\n  const {\n    name,\n    imageUrl,\n    types,\n    weight,\n    height,\n    stats,\n    abilities,\n    base_exp,\n    specie,\n  } = pokemonData\n\n  return (\n    <div className={`pokemon`}>\n      <div className={`pokeball`}>\n        <img src={imageUrl} alt={name} title={name} />\n      </div>\n      {children}\n      <div className={`info`}>\n        <h2 className={`name`}>\n          {name}{\" \"}\n          <span title={\"Generation\"} className={`generation`}>\n            {specie.generation}\n          </span>\n        </h2>\n        <div className={`statuses`}>\n          {specie.baby ? <span>baby</span> : \"\"}\n          {specie.legendary ? <span>legendary</span> : \"\"}\n          {specie.mythical ? <span>mythical</span> : \"\"}\n        </div>\n        <p className={`description`}>\n          {cleanDescription(specie.description || \"\", name)}\n        </p>\n      </div>\n      <div className=\"pokeinfo\">\n        <div className={`specie-info`}>\n          <div className={`specie`}>\n            <h3>Specie</h3>\n            <ul>\n              <li key={`type`}>\n                <span className={`key`}>Type:</span>\n                <span className={`value type`}>{types.join(\" + \")}</span>\n              </li>\n              {specie.evolveFrom ? (\n                <li key={`evolve-from`}>\n                  <span className={`key`}>Evolve From:</span>\n                  <span className={`value`}>{specie.evolveFrom}</span>\n                </li>\n              ) : (\n                \"\"\n              )}\n              {specie.habitat ? (\n                <li key={`habitat`}>\n                  <span className={`key`}>Habitat:</span>\n                  <span className={`value`}>{specie.habitat}</span>\n                </li>\n              ) : (\n                \"\"\n              )}\n              {specie.growthRate ? (\n                <li key={`growth-rate`}>\n                  <span className={`key`}>Growth Rate:</span>\n                  <span className={`value`}>{specie.growthRate}</span>\n                </li>\n              ) : (\n                \"\"\n              )}\n              {specie.varieties ? (\n                <li key={`varieties`}>\n                  <span className={`key`}>Varieties:</span>\n                  <span className={`value`}>{specie.varieties}</span>\n                </li>\n              ) : (\n                \"\"\n              )}\n              {specie.eggGroups ? (\n                <li key={`egg-groups`}>\n                  <span className={`key`}>Egg Group:</span>\n                  <span className={`value`}>{specie.eggGroups.join(\", \")}</span>\n                </li>\n              ) : (\n                \"\"\n              )}\n            </ul>\n          </div>\n          <div className={`abilities`}>\n            <h3>Abilities</h3>\n            <ul>\n              {abilities.map((ability: Ability) => (\n                <li key={ability.name}>\n                  <span className={`name`}>{noDash(ability.name)}</span>\n                  <span role={`img`} title={ability.description}>\n                    â\n                  </span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <div className={`stats`}>\n          <h3>Stats</h3>\n          <ul>\n            <li key={`weight`}>\n              <span className={`key name`}>Weight:</span>\n              <span className={`value`}>{weight}</span>\n            </li>\n            <li key={`height`}>\n              <span className={`key name`}>Height:</span>\n              <span className={`value`}>{height}</span>\n            </li>\n            <li key={`base_exp`}>\n              <span className={`key name`}>Base EXP:</span>\n              <span className={`value`}>{base_exp}</span>\n            </li>\n            {stats.map((stat: Stat) => (\n              <li key={stat.name}>\n                <span className={`key name ${stat.name.toLowerCase()}`}>\n                  {noDash(stat.name.replace(\"special\", \"sp.\"))}:\n                </span>\n                <span className={`value`}>{stat.value}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Pokemon\n","import * as React from \"react\"\n\nimport Layout from \"../components/theme/layout\"\nimport Seo from \"../components/seo/seo\"\nimport MainNavigation from \"../components/main-navigation\"\nimport BreadcrumbsSnippet from \"../components/seo/breadcrumbs-snippet\"\nimport ThemeSwitcher from \"../components/theme/theme-switcher\"\n\nimport \"../components/404/404.css\"\nimport Pokemon from \"../components/404/pokemon\"\n\nconst NotFoundPage = (): JSX.Element => (\n  <Layout>\n    <Seo\n      title=\"404: Not Found\"\n      className=\"not-found-page\"\n      meta={[\n        {\n          name: `robots`,\n          content: `noindex,nofollow`,\n        },\n      ]}\n    />\n    <div className=\"container\">\n      <main className=\"row not-found-wrapper\">\n        <div className=\"not-found-content\">\n          <Pokemon>\n            <h1>Not Found</h1>\n            <MainNavigation space=\"404\" />\n            <p>\n              You just hit a route that <strong>doesn&#39;t exist</strong>.\n            </p>\n            <p className={`pokemon-intro`}>\n              At least you have found a pokemon:\n            </p>\n          </Pokemon>\n          <ThemeSwitcher />\n        </div>\n      </main>\n      <BreadcrumbsSnippet crumbs={[]} />\n    </div>\n  </Layout>\n)\n\nexport default NotFoundPage\n"],"names":["_ref","crumbs","siteUrl","useWebsiteMetadata","crumbItems","position","name","item","forEach","crumbItem","idx","path","title","Object","entries","push","schemaJSONLD","itemListElement","React","Helmet","type","JSON","stringify","noDash","value","replace","async","fetchJson","url","fetch","then","res","json","fetchAbilities","Promise","all","rawAbilities","map","effectInEng","rawAbility","ability","effect_entries","find","entry","language","hidden","is_hidden","description","short_effect","fetchSpecieInfo","ID","specieData","_specieData$evolves_f","_specieData$habitat","console","log","engEntries","flavor_text_entries","filter","sort","Math","random","flavor_text","generation","toUpperCase","evolveFrom","evolves_from_species","varieties","length","undefined","eggGroups","egg_groups","group","habitat","growthRate","growth_rate","mythical","is_mythical","baby","is_baby","legendary","is_legendary","children","pokemonID","_","useState","floor","pokemonData","setPokemonData","useEffect","_pokeData$sprites","_pokeData$sprites$oth","_pokeData$sprites$oth2","pokeData","imageUrl","sprites","other","dream_world","front_default","types","_type$type","weight","height","stats","statItem","stat","base_stat","specie","base_exp","base_experience","abilities","fetchPokemon","fetchRandomPokemon","className","src","alt","cleanDescription","key","join","role","toLowerCase","NotFoundPage","Layout","Seo","meta","content","Pokemon","MainNavigation","space","ThemeSwitcher","BreadcrumbsSnippet"],"sourceRoot":""}