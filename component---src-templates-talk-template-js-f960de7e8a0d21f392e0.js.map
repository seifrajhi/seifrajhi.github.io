{"version":3,"file":"component---src-templates-talk-template-js-f960de7e8a0d21f392e0.js","mappings":"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","sources":["webpack://seifrajhi.github.io/./src/components/blog/newsletter-form.tsx","webpack://seifrajhi.github.io/./src/components/talks/talk-author.tsx","webpack://seifrajhi.github.io/./src/components/talks/talk.js","webpack://seifrajhi.github.io/./src/components/talks/talk-navigation.js","webpack://seifrajhi.github.io/./src/components/talks/share-block.tsx","webpack://seifrajhi.github.io/./src/templates/talkTemplate.js"],"sourcesContent":["import * as React from \"react\"\n\nimport \"./newsletter-form.css\"\n\nconst NewsletterForm = (): JSX.Element => {\n  return (\n    <div data-nosnippet=\"\" className=\"newsletter-form\">\n      <iframe\n        src=\"https://rajhisaif.substack.com/embed\"\n        loading=\"lazy\"\n        width=\"100%\"\n        height=\"320\"\n        style={{ border: \"10px solid #fff\" }}\n        frameBorder=\"0\"\n        scrolling=\"no\"\n        title=\"Newsletter Form\"\n      />\n    </div>\n  )\n}\n\nexport default NewsletterForm\n","import * as React from \"react\"\nimport Logo from \"../theme/logo\"\n\nimport \"./talk-author.css\"\n\nconst TalkAuthor = (): JSX.Element => {\n  return (\n    <div className=\"talk-author-wrapper\">\n      <div className=\"logo\">\n        <div className=\"avatar\">\n          <Logo />\n        </div>\n      </div>\n      <br></br>\n      <div className=\"name\">• Saifeddine Rajhi •</div>\n      <p className=\"talk-section-descr\">\n        My talks, pieces of advice and personal & professional life experience <br />\n        that will help you to <strong>overcome</strong> your life struggles\n      </p>\n    </div>\n  )\n}\n\nexport default TalkAuthor\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport MainNavigation from \"../main-navigation\"\nimport ThemeSwitcher from \"../theme/theme-switcher\"\nimport ReadingTracker, { ContentTypes } from \"../analytics/reading-tracker\"\nimport ViewPageHeader from \"../theme/view-page-header\"\n\nimport \"./talk.css\"\nimport \"../theme/content.css\"\n\nconst Talk = (props) => {\n  const {\n    title,\n    keywords,\n    timeToRead,\n    publishedHumanDate,\n    publishedFullDate,\n    contentHtml,\n    cover,\n    coverCredits,\n  } = props\n\n  return (\n    <article className=\"talk-wrapper\">\n      <header>\n        <ViewPageHeader spaceTitle=\"Talks\" spaceLink=\"/talks/\" />\n        <br></br>\n        <MainNavigation space={\"talks\"} />\n        <br></br>\n        <figure className=\"cover\">\n          <div className=\"cover-filter\">\n            <GatsbyImage\n              className=\"cover cover-image\"\n              image={cover}\n              alt={title}\n            />\n          </div>\n          <figcaption\n            data-nosnippet=\"\"\n            className=\"image-title\"\n            dangerouslySetInnerHTML={{ __html: coverCredits }}\n          />\n        </figure>\n        \n        <h1>{title}</h1>\n        <div data-nosnippet=\"\" className=\"talk-details\">\n          <time className=\"talk-createdat\" dateTime={publishedFullDate}>\n            {publishedHumanDate}\n          </time>\n          <span> • </span>\n          <span className=\"talk-time2read\">\n            {timeToRead}\n            {timeToRead > 1 ? \"mins\" : \"min\"} read\n          </span>\n          <div className=\"theme-switcher\">\n            <ThemeSwitcher />\n          </div>\n        </div>\n      </header>\n      <div className=\"talk-divider\" />\n      <ul data-nosnippet=\"\" className=\"talk-tags\">\n        {keywords.map((keyword) => (\n          <li key={`tag-${keyword}`}>{keyword}</li>\n        ))}\n      </ul>\n      <div className=\"talk-divider\" />\n      <ReadingTracker contentType={ContentTypes.TALK}>\n        <div\n          className=\"content talk-content\"\n          dangerouslySetInnerHTML={{ __html: contentHtml }}\n        />\n      </ReadingTracker>\n    </article>\n  )\n}\n\nTalk.propTypes = {\n  title: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  publishedHumanDate: PropTypes.string.isRequired,\n  publishedFullDate: PropTypes.string.isRequired,\n  contentHtml: PropTypes.string.isRequired,\n}\n\nexport default Talk\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nimport \"./talk-navigation.css\"\n\nconst TalkNavigation = (props) => {\n  const {\n    next: { frontmatter: { title: nextTitle, path: nextUrl } = {} } = {},\n    prev: { frontmatter: { title: prevTitle, path: prevUrl } = {} } = {},\n  } = props\n\n  return (\n    <div className=\"talk-navigation-wrapper\">\n      <nav className=\"talk-navigation\">\n        <div className=\"nav-links\">\n          {nextUrl && (\n            <Link rel=\"next\" className=\"next-talk\" to={nextUrl}>\n              {nextTitle} →\n            </Link>\n          )}\n          {prevUrl && (\n            <Link rel=\"prev\" className=\"prev-talk\" to={prevUrl}>\n              ← {prevTitle}\n            </Link>\n          )}\n          <Link className=\"all-talks\" to=\"/talks/\">\n            All talks\n          </Link>\n        </div>\n      </nav>\n    </div>\n  )\n}\n\nTalkNavigation.propTypes = {\n  next: PropTypes.object,\n  prev: PropTypes.object,\n}\n\nexport default TalkNavigation\n","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons/faLinkedin\"\nimport { faReddit } from \"@fortawesome/free-brands-svg-icons/faReddit\"\nimport { faXTwitter } from \"@fortawesome/free-brands-svg-icons/faXTwitter\"\nimport { faFacebook } from \"@fortawesome/free-brands-svg-icons/faFacebook\"\nimport { faGetPocket } from \"@fortawesome/free-brands-svg-icons/faGetPocket\"\nimport {\n  FacebookShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  RedditShareButton,\n  PocketShareButton,\n} from \"react-share\"\n\nimport { useWebsiteMetadata } from \"../../hooks/website-metadata\"\nimport { trackCustomEvent } from \"gatsby-plugin-google-analytics\"\n\nimport \"./share-block.css\"\n\ninterface Props {\n  title: string\n  path: string\n  keywords: string[]\n}\n\nconst ShareBlock = ({ title, path, keywords }: Props): JSX.Element => {\n  const { siteUrl } = useWebsiteMetadata()\n  const url: string = `${siteUrl}${path}`\n\n  return (\n    <div data-nosnippet=\"\" className=\"social-share-wrapper\">\n      <h3>Share Your Love</h3>\n      <FacebookShareButton\n        beforeOnClick={() => {\n          trackCustomEvent({\n            category: \"social\",\n            action: \"share\",\n            label: \"facebook\",\n          })\n\n          typeof window !== \"undefined\" &&\n            typeof window.gtag !== \"undefined\" &&\n            window.gtag(\"event\", \"share\", {\n              event_category: \"social\",\n              event_label: \"facebook\",\n            })\n        }}\n        url={url}\n        keywords={keywords}\n        className=\"social-share-item facebook\"\n        aria-label=\"Share Via Facebook\"\n        title=\"Share Via Facebook\"\n      >\n        <FontAwesomeIcon icon={faFacebook} />\n      </FacebookShareButton>\n      <TwitterShareButton\n        beforeOnClick={() => {\n          trackCustomEvent({\n            category: \"social\",\n            action: \"share\",\n            label: \"twitter\",\n          })\n\n          typeof window !== \"undefined\" &&\n            typeof window.gtag !== \"undefined\" &&\n            window.gtag(\"event\", \"share\", {\n              event_category: \"social\",\n              event_label: \"twitter\",\n            })\n        }}\n        url={url}\n        className=\"social-share-item twitter\"\n        title={title}\n        keywords={keywords}\n        aria-label=\"Share Via Twitter\"\n      >\n        <FontAwesomeIcon icon={faXTwitter} />\n      </TwitterShareButton>\n      <LinkedinShareButton\n        beforeOnClick={() => {\n          trackCustomEvent({\n            category: \"social\",\n            action: \"share\",\n            label: \"linkedin\",\n          })\n          typeof window !== \"undefined\" &&\n            typeof window.gtag !== \"undefined\" &&\n            window.gtag(\"event\", \"share\", {\n              event_category: \"social\",\n              event_label: \"linkedin\",\n            })\n        }}\n        url={url}\n        className=\"social-share-item linkedin\"\n        aria-label=\"Share Via LinkedIn\"\n        keywords={keywords}\n        title=\"Share Via LinkedIn\"\n      >\n        <FontAwesomeIcon icon={faLinkedin} />\n      </LinkedinShareButton>\n      <RedditShareButton\n        beforeOnClick={() => {\n          trackCustomEvent({\n            category: \"social\",\n            action: \"share\",\n            label: \"reddit\",\n          })\n          typeof window !== \"undefined\" &&\n            typeof window.gtag !== \"undefined\" &&\n            window.gtag(\"event\", \"share\", {\n              event_category: \"social\",\n              event_label: \"reddit\",\n            })\n        }}\n        url={url}\n        className=\"social-share-item reddit\"\n        title={title}\n        keywords={keywords}\n        aria-label=\"Share Via Reddit\"\n      >\n        <FontAwesomeIcon icon={faReddit} />\n      </RedditShareButton>\n      <PocketShareButton\n        beforeOnClick={() => {\n          trackCustomEvent({\n            category: \"social\",\n            action: \"share\",\n            label: \"pocket\",\n            value: url,\n          })\n\n          typeof window !== \"undefined\" &&\n            typeof window.gtag !== \"undefined\" &&\n            window.gtag(\"event\", \"share\", {\n              event_category: \"social\",\n              event_label: \"pocket\",\n              value: url,\n            })\n        }}\n        url={url}\n        className=\"social-share-item pocket\"\n        title={title}\n        keywords={keywords}\n        aria-label=\"Add to Pocket\"\n      >\n        <FontAwesomeIcon icon={faGetPocket} />\n      </PocketShareButton>\n    </div>\n  )\n}\n\nShareBlock.propTypes = {\n  title: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n}\n\nShareBlock.defaultProps = {\n  keywords: [],\n}\n\nexport default ShareBlock\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport TalkAuthor from \"../components/talks/talk-author\"\nimport Talk from \"../components/talks/talk\"\nimport TalkNavigation from \"../components/talks/talk-navigation\"\nimport Layout from \"../components/theme/layout\"\nimport Footer from \"../components/footer\"\nimport Seo from \"../components/seo/seo\"\nimport MainNavigation from \"../components/main-navigation\"\nimport ViewPageHeader from \"../components/theme/view-page-header\"\nimport NewsletterForm from \"../components/blog/newsletter-form\"\nimport ShareBlock from \"../components/talks/share-block\"\nimport BreadcrumbsSnippet from \"../components/seo/breadcrumbs-snippet\"\nimport ArticleRichSnippet from \"../components/seo/article-snippet\"\n\nimport \"./TalkView.css\"\n\nexport default function Template({\n  data,\n  pageContext: { prevTalk, nextTalk },\n}) {\n  const {\n    markdownRemark: {\n      frontmatter: {\n        id,\n        path,\n        title,\n        humanDate,\n        fullDate,\n        keywords,\n        cover: {\n          childImageSharp: { gatsbyImageData },\n        },\n        coverCredits,\n      },\n      html,\n      rawMarkdownBody,\n      timeToRead,\n      excerpt,\n      wordCount: { words },\n    },\n  } = data\n\n  return (\n    <Layout>\n      <Seo\n        title={`${title} - Talks`}\n        className=\"talk-view-page\"\n        pagePath={path}\n        imagePath={gatsbyImageData.images.fallback.src}\n        ogType=\"article\"\n        description={excerpt}\n        keywords={keywords}\n        meta={[]}\n      />\n      <div className=\"talk-header\">\n      </div>\n      <main>\n        <Talk\n          title={title}\n          timeToRead={timeToRead}\n          publishedHumanDate={humanDate}\n          publishedFullDate={fullDate}\n          keywords={keywords}\n          cover={gatsbyImageData}\n          coverCredits={coverCredits}\n          contentHtml={html}\n        />\n        <ShareBlock title={title} path={path} tags={keywords} className=\"spaced-component\" />\n        <NewsletterForm />\n      </main>\n      <aside className=\"talk-sidebar\">\n        <TalkAuthor />\n        <TalkNavigation prev={prevTalk} next={nextTalk} />\n      </aside>\n      <Footer />\n      <ArticleRichSnippet\n        title={title}\n        path={path}\n        datePublished={fullDate}\n        dateModified={fullDate} // gitLogLatestDate\n        content={rawMarkdownBody}\n        wordCount={words}\n        keywords={keywords}\n        cover={gatsbyImageData}\n        articleSection={\"Talks\"}\n        genre={[\n          \"self-improvement\",\n          \"management\",\n          \"talks\",\n          \"life experience\",\n          \"life exploration\",\n        ]}\n      />\n      <BreadcrumbsSnippet\n        crumbs={[{ \"/talks/\": \"Talks\" }, { [path]: title }]}\n      />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query ($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      timeToRead\n      excerpt\n      rawMarkdownBody\n      wordCount {\n        words\n      }\n      frontmatter {\n        id\n        path\n        humanDate: date(formatString: \"MMM D, YYYY\")\n        fullDate: date(formatString: \"YYYY-MM-DD\")\n        title\n        keywords\n        cover {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED)\n          }\n        }\n        coverCredits\n      }\n    }\n  }\n`\n"],"names":["NewsletterForm","React","className","src","loading","width","height","style","border","frameBorder","scrolling","title","TalkAuthor","Logo","props","keywords","timeToRead","publishedHumanDate","publishedFullDate","contentHtml","cover","coverCredits","ViewPageHeader","spaceTitle","spaceLink","MainNavigation","space","GatsbyImage","image","alt","dangerouslySetInnerHTML","__html","dateTime","ThemeSwitcher","map","keyword","key","ReadingTracker","contentType","ContentTypes","TALK","next","frontmatter","nextTitle","path","nextUrl","prev","prevTitle","prevUrl","Link","rel","to","ShareBlock","_ref","siteUrl","useWebsiteMetadata","url","FacebookShareButton","beforeOnClick","trackCustomEvent","category","action","label","window","gtag","event_category","event_label","FontAwesomeIcon","icon","faFacebook","TwitterShareButton","faXTwitter","LinkedinShareButton","faLinkedin","RedditShareButton","faReddit","PocketShareButton","value","faGetPocket","defaultProps","Template","data","pageContext","prevTalk","nextTalk","markdownRemark","id","humanDate","fullDate","childImageSharp","gatsbyImageData","html","rawMarkdownBody","excerpt","wordCount","words","Layout","Seo","pagePath","imagePath","images","fallback","ogType","description","meta","Talk","tags","TalkNavigation","Footer","ArticleRichSnippet","datePublished","dateModified","content","articleSection","genre","BreadcrumbsSnippet","crumbs"],"sourceRoot":""}