{"version":3,"file":"component---src-pages-blog-js-ecde77d98197d52cb813.js","mappings":"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","sources":["webpack://seifrajhi.github.io/./src/components/blog/blog-teaser.tsx","webpack://seifrajhi.github.io/./src/components/seo/breadcrumbs-snippet.tsx","webpack://seifrajhi.github.io/./src/components/theme/logo.tsx","webpack://seifrajhi.github.io/./src/components/theme/view-page-header.js","webpack://seifrajhi.github.io/./src/pages/blog.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport gsap from \"gsap\";\n\nimport useReadRepository, {\n  getStatusLabel,\n  ReadStatuses,\n} from \"../../hooks/read-repository\";\n\nimport \"./blog-teaser.css\";\nimport { ContentTypes } from \"../analytics/reading-tracker\";\n\nconst isNewArticle = (publishDate: string): boolean => {\n  const then = new Date(publishDate);\n  const now = new Date();\n\n  const msBetweenDates = Math.abs(then.getTime() - now.getTime());\n  const daysBetweenDates = msBetweenDates / (24 * 60 * 60 * 1000);\n\n  return daysBetweenDates < 30;\n};\n\nconst BlogTeaser = (props) => {\n  const {\n    id,\n    title,\n    url,\n    timeToRead,\n    publishedHumanDate,\n    publishedFullDate,\n    excerpt,\n    cover,\n    keywords,\n  } = props;\n\n  const [articleReadRepository, _] = useReadRepository(ContentTypes.BLOG);\n  const readingState = articleReadRepository[id];\n\n  const isFinished: boolean =\n    readingState && readingState.status == ReadStatuses.FINISHED;\n  const isNew: boolean = isNewArticle(publishedFullDate);\n\n  const teaserRef = useRef(null);\n\n  useEffect(() => {\n    const element = teaserRef.current;\n\n    gsap.fromTo(\n      element,\n      { scale: 1 },\n      {\n        scale: 1.4,\n        duration: 0.5,\n        paused: true,\n        ease: \"power1.inOut\",\n        onReverseComplete: () => gsap.set(element, { scale: 1 }),\n      }\n    );\n\n    const handleMouseEnter = () => gsap.to(element, { scale: 1.05 });\n    const handleMouseLeave = () => gsap.to(element, { scale: 1 });\n\n    element.addEventListener(\"mouseenter\", handleMouseEnter);\n    element.addEventListener(\"mouseleave\", handleMouseLeave);\n\n    return () => {\n      element.removeEventListener(\"mouseenter\", handleMouseEnter);\n      element.removeEventListener(\"mouseleave\", handleMouseLeave);\n    };\n  }, []);\n\n  return (\n    <article className=\"blog-item\" ref={teaserRef}>\n      <Link className=\"article-header\" to={url}>\n        <div className=\"cover-filter\">\n          <GatsbyImage className=\"cover\" objectFit=\"fill\"  image={cover} alt={title} />\n        </div>\n        {isNew ? (\n          <div\n            className={`new-badge`}\n            title={`Published less than a month ago`}\n          >\n            new\n          </div>\n        ) : (\n          \"\"\n        )}\n      </Link>\n      <div className=\"article-details\">\n        <h2>\n          <Link to={url}>{title}</Link>\n        </h2>\n        <div className=\"blog-details\">\n          <time className=\"blog-created-at\" dateTime={publishedFullDate}>\n            {publishedHumanDate}\n          </time>\n          <span> • </span>\n          <span className={`blog-time2read`}>\n            {timeToRead}\n            {timeToRead > 1 ? `mins` : `min`} read\n          </span>\n          {!isFinished ? (\n            <>\n              <span> • </span>\n              <span className={`unread-badge`}>\n                {getStatusLabel(readingState?.status)}\n              </span>\n            </>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <p className=\"blog-digest\">{excerpt}</p>\n        <ul className=\"blog-tags\">\n          {keywords.map((keyword: string) => (\n            <li key={url + keyword}>{keyword}</li>\n          ))}\n        </ul>\n      </div>\n    </article>\n  );\n};\n\nBlogTeaser.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  publishedFullDate: PropTypes.string.isRequired,\n  publishedHumanDate: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n  cover: PropTypes.object.isRequired,\n  keywords: PropTypes.array.isRequired,\n};\n\nexport default BlogTeaser;\n","import * as React from \"react\"\nimport Helmet from \"react-helmet\"\n\nimport { useWebsiteMetadata } from \"../../hooks/website-metadata\"\n\ninterface Breadcrumb {\n  \"@type\": string\n  position: number\n  name: string\n  item: string\n}\n\ntype Crumb = Record<string, string>\n\ninterface Props {\n  crumbs: Crumb[]\n}\n\nconst BreadcrumbsSnippet = ({ crumbs = [] }: Props): JSX.Element => {\n  const { siteUrl } = useWebsiteMetadata()\n\n  const crumbItems: Breadcrumb[] = [\n    {\n      \"@type\": \"ListItem\",\n      position: 1,\n      name: \"Home\",\n      item: `${siteUrl}/`,\n    },\n  ]\n\n  crumbs.forEach((crumbItem: Crumb, idx: number) => {\n    const [[path, title]] = Object.entries(crumbItem)\n\n    crumbItems.push({\n      \"@type\": \"ListItem\",\n      position: idx + 2, // adjustment for the first home item which is in 1 position\n      name: title,\n      item: `${siteUrl}${path}`,\n    })\n  })\n\n  const schemaJSONLD = {\n    \"@context\": \"http://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    itemListElement: crumbItems,\n  }\n\n  return (\n    <Helmet>\n      <script type=\"application/ld+json\">{JSON.stringify(schemaJSONLD)}</script>\n    </Helmet>\n  )\n}\n\nexport default BreadcrumbsSnippet\n","import * as React from \"react\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Logo = (): JSX.Element => {\n  // TODO: parametrize and unify this component with Avatar one\n  return (\n    <StaticImage\n      className=\"logo-img\"\n      src={`../../images/homepage/saifeddine-rajhi.jpeg`}\n      width={150}\n      quality={80}\n      formats={[\"auto\", \"webp\", \"avif\"]}\n      alt={`Saifeddine Rajhi`}\n    />\n  )\n}\n\nexport default Logo\n","import React from \"react\"\nimport Logo from \"../theme/logo\"\n\nimport \"./view-page-header.css\"\n\nconst ViewPageHeader = ({ spaceTitle, spaceLink, isListing = false }) => {\n  return (\n    <div className=\"view-page-header\">\n      <div className=\"view-page-header-wrapper\">\n        <div className=\"logo-wrapper\">\n          <div className=\"logo\">\n            <Logo width={150} />\n          </div>\n          <div className=\"name\">\n            <a href={spaceLink} title=\"back to blog\">\n              Saifeddine <br /> Rajhi\n            </a>\n          </div>\n        </div>\n        {isListing && (\n          <h1 className=\"blog-title\">\n            <a href={spaceLink} title=\"back to the homepage\">\n              {spaceTitle}\n            </a>\n          </h1>\n        )}\n        {!isListing && (\n          <h2 className=\"blog-title\">\n            <a href={spaceLink} title=\"back to the homepage\">\n              {spaceTitle}\n            </a>\n          </h2>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default ViewPageHeader\n","import React, { Component } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/theme/layout\"\nimport Seo from \"../components/seo/seo\"\nimport ViewPageHeader from \"../components/theme/view-page-header\"\nimport MainNavigation from \"../components/main-navigation\"\nimport BlogTeaser from \"../components/blog/blog-teaser\"\nimport ThemeSwitcher from \"../components/theme/theme-switcher\"\nimport BreadcrumbsSnippet from \"../components/seo/breadcrumbs-snippet\"\nimport Footer from \"../components/footer\"\n\nimport \"./blog.css\"\n\nclass BlogListPage extends Component {\n  render() {\n    const {\n      data: {\n        allMarkdownRemark: { edges },\n      },\n    } = this.props\n\n    return (\n      <Layout>\n        <Seo\n          title=\"Blog\"\n          pagePath=\"/blog/\"\n          className=\"blog-list-page\"\n          description=\"Technical blog about Platform engineering, data science, math and software engineering\"\n          keywords={[\n            \"technical blog\",\n            \"kubernetes\",\n            \"AWS\",\n            \"Platform engineer blog\",\n            \"kubernetes\",\n            \"engineering\",\n            \"Cloud engineering\",\n            \"Saifeddine Rajhi blog\",\n            \"Saif Rajhi blog\",\n          ]}\n          meta={[]}\n        />\n        <div className=\"blog-listing-wrapper\">\n          <aside className=\"blog-sidebar\">\n            <div className=\"blog-header\">\n              <ViewPageHeader\n                spaceTitle=\"Blog\"\n                spaceLink=\"/blog/\"\n                isListing={true}\n              />\n              <MainNavigation space={\"blog\"} />\n            </div>\n            <div className=\"blog-intro\">\n              Technical notes about data Platform engineering, SRE, containers and\n              cloud ecosystems. Recording what I learn everyday.\n            </div>\n            <div className=\"misc\">\n              <div className=\"theme-switcher\">\n                <ThemeSwitcher />\n              </div>\n            </div>\n          </aside>\n          <main\n            data-nosnippet=\"\"\n            className={`blog-list blog-grid ${!edges.length ? \"no-posts\" : \"\"}`}\n          >\n            {!edges.length && (\n              <div className=\"no-posts-placeholder\">\n                Great posts will be here as soon as my muse comes back to me{\" \"}\n                <span role=\"img\" aria-label=\"magic will happen soon\">\n                  💫\n                </span>{\" \"}\n                <br />\n                Come back soon{\" \"}\n                <span aria-label=\"bye\" role=\"img\">\n                  👋\n                </span>\n              </div>\n            )}\n            {edges.map(\n              ({\n                node: {\n                  timeToRead,\n                  frontmatter: {\n                    id,\n                    title,\n                    path,\n                    humanDate,\n                    fullDate,\n                    excerpt,\n                    keywords,\n                    cover: {\n                      childImageSharp: { gatsbyImageData },\n                    },\n                  },\n                },\n              }) => (\n                <BlogTeaser\n                  id={id}\n                  key={id}\n                  title={title}\n                  url={path}\n                  timeToRead={timeToRead}\n                  publishedHumanDate={humanDate}\n                  publishedFullDate={fullDate}\n                  excerpt={excerpt}\n                  cover={gatsbyImageData}\n                  keywords={keywords}\n                />\n              )\n            )}\n          </main>\n          <div className=\"clearfix\" />\n        </div>\n        <Footer />\n        <BreadcrumbsSnippet crumbs={[{ \"/blog/\": \"Blog\" }]} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogListPage\n\nexport const pageQuery = graphql`\n  query BlogListQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: {\n        fileAbsolutePath: { regex: \"/(blog)/\" }\n        frontmatter: { published: { eq: true } }\n      }\n    ) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            id\n            humanDate: date(formatString: \"MMM D, YYYY\")\n            fullDate: date(formatString: \"YYYY-MM-DD\")\n            path\n            title\n            keywords\n            excerpt\n            cover {\n              childImageSharp {\n                gatsbyImageData(\n                  layout: CONSTRAINED\n                  width: 620\n                  placeholder: BLURRED\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["props","id","title","url","timeToRead","publishedHumanDate","publishedFullDate","excerpt","cover","keywords","articleReadRepository","_","useReadRepository","ContentTypes","BLOG","readingState","isFinished","status","ReadStatuses","FINISHED","isNew","publishDate","then","Date","now","Math","abs","getTime","isNewArticle","teaserRef","useRef","useEffect","element","current","gsap","fromTo","scale","duration","paused","ease","onReverseComplete","set","handleMouseEnter","to","handleMouseLeave","addEventListener","removeEventListener","React","className","ref","Link","GatsbyImage","objectFit","image","alt","dateTime","getStatusLabel","map","keyword","key","_ref","crumbs","siteUrl","useWebsiteMetadata","crumbItems","position","name","item","forEach","crumbItem","idx","path","Object","entries","push","schemaJSONLD","itemListElement","Helmet","type","JSON","stringify","Logo","StaticImage","src","width","quality","formats","__imageData","require","spaceTitle","spaceLink","isListing","href","BlogListPage","_Component","apply","arguments","_inheritsLoose","prototype","render","data","allMarkdownRemark","edges","this","Layout","Seo","pagePath","description","meta","ViewPageHeader","MainNavigation","space","ThemeSwitcher","length","role","node","frontmatter","humanDate","fullDate","childImageSharp","gatsbyImageData","BlogTeaser","Footer","BreadcrumbsSnippet","Component"],"sourceRoot":""}